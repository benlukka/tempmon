/* tslint:disable */
/* eslint-disable */
/**
 * Tempmon API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists } from '../runtime';
/**
 *
 * @export
 * @interface TemperatureHumidityRequest
 */
export interface TemperatureHumidityRequest {
    /**
     *
     * @type {string}
     * @memberof TemperatureHumidityRequest
     */
    type: string;
    /**
     *
     * @type {number}
     * @memberof TemperatureHumidityRequest
     */
    temperature?: number | null;
    /**
     *
     * @type {number}
     * @memberof TemperatureHumidityRequest
     */
    humidity?: number | null;
    /**
     *
     * @type {string}
     * @memberof TemperatureHumidityRequest
     */
    macAddress?: string | null;
    /**
     *
     * @type {string}
     * @memberof TemperatureHumidityRequest
     */
    deviceName?: string | null;
}

/**
 * Check if a given object implements the TemperatureHumidityRequest interface.
 */
export function instanceOfTemperatureHumidityRequest(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "type" in value;

    return isInstance;
}

export function TemperatureHumidityRequestFromJSON(json: any): TemperatureHumidityRequest {
    return TemperatureHumidityRequestFromJSONTyped(json, false);
}

export function TemperatureHumidityRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): TemperatureHumidityRequest {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {

        'type': json['type'],
        'temperature': !exists(json, 'temperature') ? undefined : json['temperature'],
        'humidity': !exists(json, 'humidity') ? undefined : json['humidity'],
        'macAddress': !exists(json, 'macAddress') ? undefined : json['macAddress'],
        'deviceName': !exists(json, 'deviceName') ? undefined : json['deviceName'],
    };
}

export function TemperatureHumidityRequestToJSON(value?: TemperatureHumidityRequest | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {

        'type': value.type,
        'temperature': value.temperature,
        'humidity': value.humidity,
        'macAddress': value.macAddress,
        'deviceName': value.deviceName,
    };
}

