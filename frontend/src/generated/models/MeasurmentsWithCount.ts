/* tslint:disable */
/* eslint-disable */
/**
 * Tempmon API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { Measurement } from './Measurement';
import {
    MeasurementFromJSON,
    MeasurementFromJSONTyped,
    MeasurementToJSON,
} from './Measurement';

/**
 * 
 * @export
 * @interface MeasurmentsWithCount
 */
export interface MeasurmentsWithCount {
    /**
     * 
     * @type {Array<Measurement>}
     * @memberof MeasurmentsWithCount
     */
    measurements: Array<Measurement>;
    /**
     * 
     * @type {number}
     * @memberof MeasurmentsWithCount
     */
    count: number;
}

/**
 * Check if a given object implements the MeasurmentsWithCount interface.
 */
export function instanceOfMeasurmentsWithCount(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "measurements" in value;
    isInstance = isInstance && "count" in value;

    return isInstance;
}

export function MeasurmentsWithCountFromJSON(json: any): MeasurmentsWithCount {
    return MeasurmentsWithCountFromJSONTyped(json, false);
}

export function MeasurmentsWithCountFromJSONTyped(json: any, ignoreDiscriminator: boolean): MeasurmentsWithCount {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'measurements': ((json['measurements'] as Array<any>).map(MeasurementFromJSON)),
        'count': json['count'],
    };
}

export function MeasurmentsWithCountToJSON(value?: MeasurmentsWithCount | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'measurements': ((value.measurements as Array<any>).map(MeasurementToJSON)),
        'count': value.count,
    };
}

