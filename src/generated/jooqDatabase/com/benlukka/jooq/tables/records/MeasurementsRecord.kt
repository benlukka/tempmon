/*
 * This file is generated by jOOQ.
 */
package com.benlukka.jooq.tables.records


import com.benlukka.jooq.tables.Measurements

import java.time.LocalDateTime

import org.jooq.Record1
import org.jooq.impl.UpdatableRecordImpl


/**
 * This class is generated by jOOQ.
 */
@Suppress("warnings")
open class MeasurementsRecord() : UpdatableRecordImpl<MeasurementsRecord>(Measurements.MEASUREMENTS) {

    open var id: Int?
        set(value): Unit = set(0, value)
        get(): Int? = get(0) as Int?

    open var timestamp: LocalDateTime?
        set(value): Unit = set(1, value)
        get(): LocalDateTime? = get(1) as LocalDateTime?

    open var temperature: Double?
        set(value): Unit = set(2, value)
        get(): Double? = get(2) as Double?

    open var humidity: Double?
        set(value): Unit = set(3, value)
        get(): Double? = get(3) as Double?

    open var ipAddress: String?
        set(value): Unit = set(4, value)
        get(): String? = get(4) as String?

    open var macAddress: String?
        set(value): Unit = set(5, value)
        get(): String? = get(5) as String?

    open var deviceName: String?
        set(value): Unit = set(6, value)
        get(): String? = get(6) as String?

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    override fun key(): Record1<Int?> = super.key() as Record1<Int?>

    /**
     * Create a detached, initialised MeasurementsRecord
     */
    constructor(id: Int? = null, timestamp: LocalDateTime? = null, temperature: Double? = null, humidity: Double? = null, ipAddress: String? = null, macAddress: String? = null, deviceName: String? = null): this() {
        this.id = id
        this.timestamp = timestamp
        this.temperature = temperature
        this.humidity = humidity
        this.ipAddress = ipAddress
        this.macAddress = macAddress
        this.deviceName = deviceName
        resetTouchedOnNotNull()
    }

    /**
     * Create a detached, initialised MeasurementsRecord
     */
    constructor(value: com.benlukka.jooq.tables.pojos.Measurements?): this() {
        if (value != null) {
            this.id = value.id
            this.timestamp = value.timestamp
            this.temperature = value.temperature
            this.humidity = value.humidity
            this.ipAddress = value.ipAddress
            this.macAddress = value.macAddress
            this.deviceName = value.deviceName
            resetTouchedOnNotNull()
        }
    }
}
